{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n      this.resize();\n      var options = this.container.actualOptions;\n      var element = this.element;\n\n      if (element) {\n        if (options.fullScreen.enable) {\n          this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n          element.style.position = \"fixed\";\n          element.style.zIndex = options.fullScreen.zIndex.toString(10);\n          element.style.top = \"0\";\n          element.style.left = \"0\";\n          element.style.width = \"100%\";\n          element.style.height = \"100%\";\n        } else {\n          element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n          element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n          element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n          element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n          element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n          element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n        }\n      }\n\n      var cover = options.backgroundMask.cover;\n      var color = cover.color;\n      var trail = options.particles.move.trail;\n      var coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n      this.coverColor = coverRgb !== undefined ? {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      } : undefined;\n      this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas, generatedCanvas) {\n      var _a;\n\n      if (!canvas.className) {\n        canvas.className = Utils_1.Constants.canvasClass;\n      }\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      if (this.context) {\n        Utils_1.CanvasUtils.clear(this.context, this.size);\n      }\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var options = this.container.actualOptions;\n\n      if (!this.context) {\n        return;\n      }\n\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        Utils_1.CanvasUtils.clear(this.context, this.size);\n        this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var options = this.container.actualOptions;\n      var trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else if (this.context) {\n        Utils_1.CanvasUtils.clear(this.context, this.size);\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function windowResize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container;\n      container.canvas.resize();\n      container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n      container.particles.setDensity();\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.resize !== undefined) {\n            plugin.resize();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container;\n      var pxRatio = container.retina.pixelRatio;\n      var size = container.canvas.size;\n      var oldSize = {\n        width: size.width,\n        height: size.height\n      };\n      size.width = this.element.offsetWidth * pxRatio;\n      size.height = this.element.offsetHeight * pxRatio;\n      this.element.width = size.width;\n      this.element.height = size.height;\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _a;\n\n      var ctx = this.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      var lineStyle = this.lineStyle(p1, p2);\n\n      if (!lineStyle) {\n        return;\n      }\n\n      var pos1 = p1.getPosition();\n      var pos2 = p2.getPosition();\n      Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var _a;\n\n      var container = this.container;\n      var ctx = container.canvas.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      var beginPos = particle.getPosition();\n      Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n  }, {\n    key: \"drawParticleShadow\",\n    value: function drawParticleShadow(particle, mousePos) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n  }, {\n    key: \"drawLinkTriangle\",\n    value: function drawLinkTriangle(p1, link1, link2) {\n      var _a;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var p2 = link1.destination;\n      var p3 = link2.destination;\n      var triangleOptions = p1.options.links.triangles;\n      var opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n      if (opacityTriangle <= 0) {\n        return;\n      }\n\n      var pos1 = p1.getPosition();\n      var pos2 = p2.getPosition();\n      var pos3 = p3.getPosition();\n      var ctx = this.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n\n      var colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n\n      if (!colorTriangle) {\n        var linksOptions = p1.options.links;\n        var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorTriangle) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n  }, {\n    key: \"drawLinkLine\",\n    value: function drawLinkLine(p1, link) {\n      var _a, _b;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var p2 = link.destination;\n      var opacity = link.opacity;\n      var pos1 = p1.getPosition();\n      var pos2 = p2.getPosition();\n      var ctx = this.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      var colorLine;\n      var twinkle = p1.options.twinkle.lines;\n\n      if (twinkle.enable) {\n        var twinkleFreq = twinkle.frequency;\n        var twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        var twinkling = Math.random() < twinkleFreq;\n\n        if (twinkling && twinkleRgb !== undefined) {\n          colorLine = twinkleRgb;\n          opacity = twinkle.opacity;\n        }\n      }\n\n      if (!colorLine) {\n        var linksOptions = p1.options.links;\n        var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorLine) {\n        return;\n      }\n\n      var width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n      var maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n      Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _a, _b, _c, _d;\n\n      if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor();\n      var psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      var options = this.container.actualOptions;\n      var pOptions = particle.options;\n      var twinkle = pOptions.twinkle.particles;\n      var twinkleFreq = twinkle.frequency;\n      var twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n      var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n      var radius = particle.getRadius();\n      var opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n      var infectionStage = particle.infecter.infectionStage;\n      var infection = options.infection;\n      var infectionStages = infection.stages;\n      var infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n      var infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n      var fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined;\n      var sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined;\n      var fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n\n      if (!this.context || !fillColorValue && !sColor) {\n        return;\n      }\n\n      var strokeColorValue = sColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity) : fillColorValue;\n      this.drawParticleLinks(particle);\n\n      if (radius > 0) {\n        Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n      }\n    }\n  }, {\n    key: \"drawParticleLinks\",\n    value: function drawParticleLinks(particle) {\n      var _this = this;\n\n      if (!this.context) {\n        return;\n      }\n\n      var container = this.container;\n      var particles = container.particles;\n      var pOptions = particle.options;\n\n      if (particle.links.length > 0) {\n        this.context.save();\n        var p1Links = particle.links.filter(function (l) {\n          var linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n          return linkFreq <= pOptions.links.frequency;\n        });\n\n        var _iterator2 = _createForOfIteratorHelper(p1Links),\n            _step2;\n\n        try {\n          var _loop = function _loop() {\n            var link = _step2.value;\n            var p2 = link.destination;\n\n            if (pOptions.links.triangles.enable) {\n              var links = p1Links.map(function (l) {\n                return l.destination;\n              });\n              var vertices = p2.links.filter(function (t) {\n                var linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n              });\n\n              if (vertices.length) {\n                var _iterator3 = _createForOfIteratorHelper(vertices),\n                    _step3;\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    var vertex = _step3.value;\n                    var p3 = vertex.destination;\n                    var triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n\n                    if (triangleFreq > pOptions.links.triangles.frequency) {\n                      continue;\n                    }\n\n                    _this.drawLinkTriangle(particle, link, vertex);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n              }\n            }\n\n            if (link.opacity > 0 && container.retina.linksWidth > 0) {\n              _this.drawLinkLine(particle, link);\n            }\n          };\n\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.context.restore();\n      }\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n  }, {\n    key: \"drawLight\",\n    value: function drawLight(mousePos) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      if (!this.context) {\n        return;\n      }\n\n      var options = this.container.actualOptions;\n      var connectOptions = options.interactivity.modes.connect;\n      return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions;\n      var background = options.background;\n      var element = this.element;\n      var elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = Utils_1.ColorUtils.colorToRgb(background.color);\n\n        if (color) {\n          elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n        } else {\n          elementStyle.backgroundColor = \"\";\n        }\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }]);\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/tsparticles/dist/Core/Canvas.js"],"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","container","size","height","width","context","generatedCanvas","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","resize","options","actualOptions","element","fullScreen","enable","originalStyle","Utils","deepExtend","style","position","zIndex","toString","top","left","cover","backgroundMask","color","trail","particles","move","coverRgb","ColorUtils","colorToRgb","coverColor","undefined","r","g","b","a","opacity","trailFillColor","fillColor","initBackground","paint","canvas","className","Constants","canvasClass","remove","offsetHeight","offsetWidth","getContext","retina","init","CanvasUtils","clear","paintBase","getStyleFromRgb","length","setResponsive","pixelRatio","setDensity","plugins","plugin","pxRatio","oldSize","resizeFactor","p1","p2","ctx","lineStyle","pos1","getPosition","pos2","drawConnectLine","linksWidth","particle","lineColor","mousePos","beginPos","drawGrabLine","drawParticleShadow","link1","link2","destination","p3","triangleOptions","links","triangles","opacityTriangle","pos3","NumberUtils","getDistance","linksDistance","colorTriangle","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","drawLinkTriangle","composite","link","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","drawLinkLine","warp","shadow","delta","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","pOptions","radius","getRadius","bubble","infectionStage","infecter","infection","infectionStages","stages","infectionColor","infectionRgb","fColor","hslToRgb","sColor","fillColorValue","strokeColorValue","stroke","drawParticleLinks","drawParticle","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","baseColor","connectOptions","interactivity","modes","connect","gradient","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        this.resize();\n        const options = this.container.actualOptions;\n        const element = this.element;\n        if (element) {\n            if (options.fullScreen.enable) {\n                this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n                element.style.position = \"fixed\";\n                element.style.zIndex = options.fullScreen.zIndex.toString(10);\n                element.style.top = \"0\";\n                element.style.left = \"0\";\n                element.style.width = \"100%\";\n                element.style.height = \"100%\";\n            }\n            else {\n                element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n                element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n                element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n                element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n                element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n                element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n            }\n        }\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const trail = options.particles.move.trail;\n        const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n        this.coverColor =\n            coverRgb !== undefined\n                ? {\n                    r: coverRgb.r,\n                    g: coverRgb.g,\n                    b: coverRgb.b,\n                    a: cover.opacity,\n                }\n                : undefined;\n        this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        if (!this.context) {\n            return;\n        }\n        if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n        }\n        else {\n            this.paintBase();\n        }\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        container.canvas.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        this.resizeFactor = {\n            width: size.width / oldSize.width,\n            height: size.height / oldSize.height,\n        };\n    }\n    drawConnectLine(p1, p2) {\n        var _a;\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        const lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        var _a;\n        const container = this.container;\n        const ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        const beginPos = particle.getPosition();\n        Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n    drawParticleShadow(particle, mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n            return;\n        }\n        let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n    drawLinkLine(p1, link) {\n        var _a, _b;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        let colorLine;\n        const twinkle = p1.options.twinkle.lines;\n        if (twinkle.enable) {\n            const twinkleFreq = twinkle.frequency;\n            const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            const twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n            return;\n        }\n        const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const infectionStage = particle.infecter.infectionStage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n        const fColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined);\n        const sColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined);\n        const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n        if (!this.context || (!fillColorValue && !sColor)) {\n            return;\n        }\n        const strokeColorValue = sColor !== undefined\n            ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity)\n            : fillColorValue;\n        this.drawParticleLinks(particle);\n        if (radius > 0) {\n            Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n        }\n    }\n    drawParticleLinks(particle) {\n        if (!this.context) {\n            return;\n        }\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (particle.links.length > 0) {\n            this.context.save();\n            const p1Links = particle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(particle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(particle, link);\n                }\n            }\n            this.context.restore();\n        }\n    }\n    drawPlugin(plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n    drawLight(mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n    paintBase(baseColor) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n    lineStyle(p1, p2) {\n        if (!this.context) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const connectOptions = options.interactivity.modes.connect;\n        return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n            }\n            else {\n                elementStyle.backgroundColor = \"\";\n            }\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n}\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}