{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorUtils = void 0;\n\nvar Utils_1 = require(\"./Utils\");\n\nvar Constants_1 = require(\"./Constants\");\n\nvar NumberUtils_1 = require(\"./NumberUtils\");\n\nfunction hue2rgb(p, q, t) {\n  var tCalc = t;\n\n  if (tCalc < 0) {\n    tCalc += 1;\n  }\n\n  if (tCalc > 1) {\n    tCalc -= 1;\n  }\n\n  if (tCalc < 1 / 6) {\n    return p + (q - p) * 6 * tCalc;\n  }\n\n  if (tCalc < 1 / 2) {\n    return q;\n  }\n\n  if (tCalc < 2 / 3) {\n    return p + (q - p) * (2 / 3 - tCalc) * 6;\n  }\n\n  return p;\n}\n\nfunction stringToRgba(input) {\n  if (input.startsWith(\"rgb\")) {\n    var regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    var result = regex.exec(input);\n    return result ? {\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      b: parseInt(result[3], 10),\n      g: parseInt(result[2], 10),\n      r: parseInt(result[1], 10)\n    } : undefined;\n  } else if (input.startsWith(\"hsl\")) {\n    var _regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n\n    var _result = _regex.exec(input);\n\n    return _result ? ColorUtils.hslaToRgba({\n      a: _result.length > 4 ? parseFloat(_result[5]) : 1,\n      h: parseInt(_result[1], 10),\n      l: parseInt(_result[3], 10),\n      s: parseInt(_result[2], 10)\n    }) : undefined;\n  } else if (input.startsWith(\"hsv\")) {\n    var _regex2 = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n\n    var _result2 = _regex2.exec(input);\n\n    return _result2 ? ColorUtils.hsvaToRgba({\n      a: _result2.length > 4 ? parseFloat(_result2[5]) : 1,\n      h: parseInt(_result2[1], 10),\n      s: parseInt(_result2[2], 10),\n      v: parseInt(_result2[3], 10)\n    }) : undefined;\n  } else {\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n    var hexFixed = input.replace(shorthandRegex, function (_m, r, g, b, a) {\n      return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    });\n    var _regex3 = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n\n    var _result3 = _regex3.exec(hexFixed);\n\n    return _result3 ? {\n      a: _result3[4] !== undefined ? parseInt(_result3[4], 16) / 0xff : 1,\n      b: parseInt(_result3[3], 16),\n      g: parseInt(_result3[2], 16),\n      r: parseInt(_result3[1], 16)\n    } : undefined;\n  }\n}\n\nvar ColorUtils = /*#__PURE__*/function () {\n  function ColorUtils() {\n    _classCallCheck(this, ColorUtils);\n  }\n\n  _createClass(ColorUtils, null, [{\n    key: \"colorToRgb\",\n    value: function colorToRgb(input, index) {\n      var useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      var _a, _b, _c;\n\n      if (input === undefined) {\n        return;\n      }\n\n      var color = typeof input === \"string\" ? {\n        value: input\n      } : input;\n      var res;\n\n      if (typeof color.value === \"string\") {\n        if (color.value === Constants_1.Constants.randomColorValue) {\n          res = ColorUtils.getRandomRgbColor();\n        } else {\n          res = ColorUtils.stringToRgb(color.value);\n        }\n      } else {\n        if (color.value instanceof Array) {\n          var colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n          res = ColorUtils.colorToRgb({\n            value: colorSelected\n          });\n        } else {\n          var colorValue = color.value;\n          var rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n          if (rgbColor.r !== undefined) {\n            res = rgbColor;\n          } else {\n            var hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n\n            if (hslColor.h !== undefined && hslColor.l !== undefined) {\n              res = ColorUtils.hslToRgb(hslColor);\n            } else {\n              var hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n\n              if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                res = ColorUtils.hsvToRgb(hsvColor);\n              }\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n  }, {\n    key: \"colorToHsl\",\n    value: function colorToHsl(color, index) {\n      var useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rgb = ColorUtils.colorToRgb(color, index, useIndex);\n      return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n  }, {\n    key: \"rgbToHsl\",\n    value: function rgbToHsl(color) {\n      var r1 = color.r / 255;\n      var g1 = color.g / 255;\n      var b1 = color.b / 255;\n      var max = Math.max(r1, g1, b1);\n      var min = Math.min(r1, g1, b1);\n      var res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0\n      };\n\n      if (max != min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n      }\n\n      res.l *= 100;\n      res.s *= 100;\n      res.h *= 60;\n\n      if (res.h < 0) {\n        res.h += 360;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"stringToAlpha\",\n    value: function stringToAlpha(input) {\n      var _a;\n\n      return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n  }, {\n    key: \"stringToRgb\",\n    value: function stringToRgb(input) {\n      return stringToRgba(input);\n    }\n  }, {\n    key: \"hslToRgb\",\n    value: function hslToRgb(hsl) {\n      var result = {\n        b: 0,\n        g: 0,\n        r: 0\n      };\n      var hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100\n      };\n\n      if (hslPercent.s === 0) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n      } else {\n        var q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n        var p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n      }\n\n      result.r = Math.floor(result.r * 255);\n      result.g = Math.floor(result.g * 255);\n      result.b = Math.floor(result.b * 255);\n      return result;\n    }\n  }, {\n    key: \"hslaToRgba\",\n    value: function hslaToRgba(hsla) {\n      var rgbResult = ColorUtils.hslToRgb(hsla);\n      return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r\n      };\n    }\n  }, {\n    key: \"hslToHsv\",\n    value: function hslToHsv(hsl) {\n      var l = hsl.l / 100,\n          sl = hsl.s / 100;\n      var v = l + sl * Math.min(l, 1 - l),\n          sv = !v ? 0 : 2 * (1 - l / v);\n      return {\n        h: hsl.h,\n        s: sv * 100,\n        v: v * 100\n      };\n    }\n  }, {\n    key: \"hslaToHsva\",\n    value: function hslaToHsva(hsla) {\n      var hsvResult = ColorUtils.hslToHsv(hsla);\n      return {\n        a: hsla.a,\n        h: hsvResult.h,\n        s: hsvResult.s,\n        v: hsvResult.v\n      };\n    }\n  }, {\n    key: \"hsvToHsl\",\n    value: function hsvToHsl(hsv) {\n      var v = hsv.v / 100,\n          sv = hsv.s / 100;\n      var l = v * (1 - sv / 2),\n          sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n      return {\n        h: hsv.h,\n        l: l * 100,\n        s: sl * 100\n      };\n    }\n  }, {\n    key: \"hsvaToHsla\",\n    value: function hsvaToHsla(hsva) {\n      var hslResult = ColorUtils.hsvToHsl(hsva);\n      return {\n        a: hsva.a,\n        h: hslResult.h,\n        l: hslResult.l,\n        s: hslResult.s\n      };\n    }\n  }, {\n    key: \"hsvToRgb\",\n    value: function hsvToRgb(hsv) {\n      var result = {\n        b: 0,\n        g: 0,\n        r: 0\n      };\n      var hsvPercent = {\n        h: hsv.h / 60,\n        s: hsv.s / 100,\n        v: hsv.v / 100\n      };\n      var c = hsvPercent.v * hsvPercent.s,\n          x = c * (1 - Math.abs(hsvPercent.h % 2 - 1));\n      var tempRgb;\n\n      if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n        tempRgb = {\n          r: c,\n          g: x,\n          b: 0\n        };\n      } else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n        tempRgb = {\n          r: x,\n          g: c,\n          b: 0\n        };\n      } else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n        tempRgb = {\n          r: 0,\n          g: c,\n          b: x\n        };\n      } else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n        tempRgb = {\n          r: 0,\n          g: x,\n          b: c\n        };\n      } else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n        tempRgb = {\n          r: x,\n          g: 0,\n          b: c\n        };\n      } else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n        tempRgb = {\n          r: c,\n          g: 0,\n          b: x\n        };\n      }\n\n      if (tempRgb) {\n        var m = hsvPercent.v - c;\n        result.r = Math.floor((tempRgb.r + m) * 255);\n        result.g = Math.floor((tempRgb.g + m) * 255);\n        result.b = Math.floor((tempRgb.b + m) * 255);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"hsvaToRgba\",\n    value: function hsvaToRgba(hsva) {\n      var rgbResult = ColorUtils.hsvToRgb(hsva);\n      return {\n        a: hsva.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r\n      };\n    }\n  }, {\n    key: \"rgbToHsv\",\n    value: function rgbToHsv(rgb) {\n      var rgbPercent = {\n        r: rgb.r / 255,\n        g: rgb.g / 255,\n        b: rgb.b / 255\n      },\n          xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n          xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n          v = xMax,\n          c = xMax - xMin;\n      var h = 0;\n\n      if (v === rgbPercent.r) {\n        h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n      } else if (v === rgbPercent.g) {\n        h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n      } else if (v === rgbPercent.b) {\n        h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n      }\n\n      var s = !v ? 0 : c / v;\n      return {\n        h: h,\n        s: s * 100,\n        v: v * 100\n      };\n    }\n  }, {\n    key: \"rgbaToHsva\",\n    value: function rgbaToHsva(rgba) {\n      var hsvResult = ColorUtils.rgbToHsv(rgba);\n      return {\n        a: rgba.a,\n        h: hsvResult.h,\n        s: hsvResult.s,\n        v: hsvResult.v\n      };\n    }\n  }, {\n    key: \"getRandomRgbColor\",\n    value: function getRandomRgbColor(min) {\n      var fixedMin = min !== null && min !== void 0 ? min : 0;\n      return {\n        b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256)))\n      };\n    }\n  }, {\n    key: \"getStyleFromRgb\",\n    value: function getStyleFromRgb(color, opacity) {\n      return \"rgba(\".concat(color.r, \", \").concat(color.g, \", \").concat(color.b, \", \").concat(opacity !== null && opacity !== void 0 ? opacity : 1, \")\");\n    }\n  }, {\n    key: \"getStyleFromHsl\",\n    value: function getStyleFromHsl(color, opacity) {\n      return \"hsla(\".concat(color.h, \", \").concat(color.s, \"%, \").concat(color.l, \"%, \").concat(opacity !== null && opacity !== void 0 ? opacity : 1, \")\");\n    }\n  }, {\n    key: \"getStyleFromHsv\",\n    value: function getStyleFromHsv(color, opacity) {\n      return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n  }, {\n    key: \"mix\",\n    value: function mix(color1, color2, size1, size2) {\n      var rgb1 = color1;\n      var rgb2 = color2;\n\n      if (rgb1.r === undefined) {\n        rgb1 = ColorUtils.hslToRgb(color1);\n      }\n\n      if (rgb2.r === undefined) {\n        rgb2 = ColorUtils.hslToRgb(color2);\n      }\n\n      return {\n        b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n        g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n        r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2)\n      };\n    }\n  }, {\n    key: \"replaceColorSvg\",\n    value: function replaceColorSvg(image, color, opacity) {\n      if (!image.svgData) {\n        return \"\";\n      }\n\n      var svgXml = image.svgData;\n      var rgbHex = /#([0-9A-F]{3,6})/gi;\n      return svgXml.replace(rgbHex, function () {\n        return ColorUtils.getStyleFromHsl(color, opacity);\n      });\n    }\n  }, {\n    key: \"getLinkColor\",\n    value: function getLinkColor(p1, p2, linkColor) {\n      var _a, _b;\n\n      if (linkColor === Constants_1.Constants.randomColorValue) {\n        return ColorUtils.getRandomRgbColor();\n      } else if (linkColor === \"mid\") {\n        var sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n        var destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n\n        if (sourceColor && destColor && p2) {\n          return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        } else {\n          var hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n\n          if (hslColor) {\n            return ColorUtils.hslToRgb(hslColor);\n          }\n        }\n      } else {\n        return linkColor;\n      }\n    }\n  }, {\n    key: \"getLinkRandomColor\",\n    value: function getLinkRandomColor(optColor, blink, consent) {\n      var color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n      if (color === Constants_1.Constants.randomColorValue) {\n        if (consent) {\n          return ColorUtils.colorToRgb({\n            value: color\n          });\n        } else if (blink) {\n          return Constants_1.Constants.randomColorValue;\n        } else {\n          return Constants_1.Constants.midColorValue;\n        }\n      } else {\n        return ColorUtils.colorToRgb({\n          value: color\n        });\n      }\n    }\n  }, {\n    key: \"getHslFromAnimation\",\n    value: function getHslFromAnimation(animation) {\n      return animation !== undefined ? {\n        h: animation.h.value,\n        s: animation.s.value,\n        l: animation.l.value\n      } : undefined;\n    }\n  }]);\n\n  return ColorUtils;\n}();\n\nexports.ColorUtils = ColorUtils;","map":{"version":3,"sources":["/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/tsparticles/dist/Utils/ColorUtils.js"],"names":["Object","defineProperty","exports","value","ColorUtils","Utils_1","require","Constants_1","NumberUtils_1","hue2rgb","p","q","t","tCalc","stringToRgba","input","startsWith","regex","result","exec","a","length","parseFloat","b","parseInt","g","r","undefined","hslaToRgba","h","l","s","hsvaToRgba","v","shorthandRegex","hexFixed","replace","_m","index","useIndex","_a","_b","_c","color","res","Constants","randomColorValue","getRandomRgbColor","stringToRgb","Array","colorSelected","Utils","itemFromArray","colorToRgb","colorValue","rgbColor","rgb","hslColor","hsl","hslToRgb","hsvColor","hsv","hsvToRgb","rgbToHsl","r1","g1","b1","max","Math","min","hslPercent","floor","hsla","rgbResult","sl","sv","hsvResult","hslToHsv","hsva","hslResult","hsvToHsl","hsvPercent","c","x","abs","tempRgb","m","rgbPercent","xMax","xMin","rgba","rgbToHsv","fixedMin","NumberUtils","randomInRange","setRangeValue","opacity","getStyleFromHsl","color1","color2","size1","size2","rgb1","rgb2","mix","image","svgData","svgXml","rgbHex","p1","p2","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","optColor","blink","consent","midColorValue","animation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction hue2rgb(p, q, t) {\n    let tCalc = t;\n    if (tCalc < 0) {\n        tCalc += 1;\n    }\n    if (tCalc > 1) {\n        tCalc -= 1;\n    }\n    if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n    }\n    if (tCalc < 1 / 2) {\n        return q;\n    }\n    if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n    else if (input.startsWith(\"hsl\")) {\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n    else if (input.startsWith(\"hsv\")) {\n        const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hsvaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                s: parseInt(result[2], 10),\n                v: parseInt(result[3], 10),\n            })\n            : undefined;\n    }\n    else {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n        const result = regex.exec(hexFixed);\n        return result\n            ? {\n                a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            }\n            : undefined;\n    }\n}\nclass ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n        var _a, _b, _c;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = ColorUtils.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                    else {\n                        const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                            res = ColorUtils.hsvToRgb(hsvColor);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color, index, useIndex = true) {\n        const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n        return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = hue2rgb(p, q, hslPercent.h);\n            result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static hslToHsv(hsl) {\n        const l = hsl.l / 100, sl = hsl.s / 100;\n        const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n        return {\n            h: hsl.h,\n            s: sv * 100,\n            v: v * 100,\n        };\n    }\n    static hslaToHsva(hsla) {\n        const hsvResult = ColorUtils.hslToHsv(hsla);\n        return {\n            a: hsla.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static hsvToHsl(hsv) {\n        const v = hsv.v / 100, sv = hsv.s / 100;\n        const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n        return {\n            h: hsv.h,\n            l: l * 100,\n            s: sl * 100,\n        };\n    }\n    static hsvaToHsla(hsva) {\n        const hslResult = ColorUtils.hsvToHsl(hsva);\n        return {\n            a: hsva.a,\n            h: hslResult.h,\n            l: hslResult.l,\n            s: hslResult.s,\n        };\n    }\n    static hsvToRgb(hsv) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hsvPercent = {\n            h: hsv.h / 60,\n            s: hsv.s / 100,\n            v: hsv.v / 100,\n        };\n        const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n        let tempRgb;\n        if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n            tempRgb = {\n                r: c,\n                g: x,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n            tempRgb = {\n                r: x,\n                g: c,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n            tempRgb = {\n                r: 0,\n                g: c,\n                b: x,\n            };\n        }\n        else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n            tempRgb = {\n                r: 0,\n                g: x,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n            tempRgb = {\n                r: x,\n                g: 0,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n            tempRgb = {\n                r: c,\n                g: 0,\n                b: x,\n            };\n        }\n        if (tempRgb) {\n            const m = hsvPercent.v - c;\n            result.r = Math.floor((tempRgb.r + m) * 255);\n            result.g = Math.floor((tempRgb.g + m) * 255);\n            result.b = Math.floor((tempRgb.b + m) * 255);\n        }\n        return result;\n    }\n    static hsvaToRgba(hsva) {\n        const rgbResult = ColorUtils.hsvToRgb(hsva);\n        return {\n            a: hsva.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static rgbToHsv(rgb) {\n        const rgbPercent = {\n            r: rgb.r / 255,\n            g: rgb.g / 255,\n            b: rgb.b / 255,\n        }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n        let h = 0;\n        if (v === rgbPercent.r) {\n            h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n        }\n        else if (v === rgbPercent.g) {\n            h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n        }\n        else if (v === rgbPercent.b) {\n            h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n        }\n        const s = !v ? 0 : c / v;\n        return {\n            h,\n            s: s * 100,\n            v: v * 100,\n        };\n    }\n    static rgbaToHsva(rgba) {\n        const hsvResult = ColorUtils.rgbToHsv(rgba);\n        return {\n            a: rgba.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsv(color, opacity) {\n        return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = ColorUtils.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = ColorUtils.hslToRgb(color2);\n        }\n        return {\n            b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static getLinkColor(p1, p2, linkColor) {\n        var _a, _b;\n        if (linkColor === Constants_1.Constants.randomColorValue) {\n            return ColorUtils.getRandomRgbColor();\n        }\n        else if (linkColor === \"mid\") {\n            const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n            const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n            if (sourceColor && destColor && p2) {\n                return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n            }\n            else {\n                const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                if (hslColor) {\n                    return ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        else {\n            return linkColor;\n        }\n    }\n    static getLinkRandomColor(optColor, blink, consent) {\n        const color = typeof optColor === \"string\" ? optColor : optColor.value;\n        if (color === Constants_1.Constants.randomColorValue) {\n            if (consent) {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n            else if (blink) {\n                return Constants_1.Constants.randomColorValue;\n            }\n            else {\n                return Constants_1.Constants.midColorValue;\n            }\n        }\n        else {\n            return ColorUtils.colorToRgb({\n                value: color,\n            });\n        }\n    }\n    static getHslFromAnimation(animation) {\n        return animation !== undefined\n            ? {\n                h: animation.h.value,\n                s: animation.s.value,\n                l: animation.l.value,\n            }\n            : undefined;\n    }\n}\nexports.ColorUtils = ColorUtils;\n"]},"metadata":{},"sourceType":"script"}