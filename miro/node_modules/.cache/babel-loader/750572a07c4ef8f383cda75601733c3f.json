{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\n\nvar Enums_1 = require(\"../Enums\");\n\nvar Constants_1 = require(\"./Constants\");\n\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    var addOptions = {\n      passive: true\n    };\n\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    var removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\n\nvar EventListeners = /*#__PURE__*/function () {\n  function EventListeners(container) {\n    var _this = this;\n\n    _classCallCheck(this, EventListeners);\n\n    this.container = container;\n    this.canPush = true;\n\n    this.mouseMoveHandler = function (e) {\n      return _this.mouseTouchMove(e);\n    };\n\n    this.touchStartHandler = function (e) {\n      return _this.mouseTouchMove(e);\n    };\n\n    this.touchMoveHandler = function (e) {\n      return _this.mouseTouchMove(e);\n    };\n\n    this.touchEndHandler = function () {\n      return _this.mouseTouchFinish();\n    };\n\n    this.mouseLeaveHandler = function () {\n      return _this.mouseTouchFinish();\n    };\n\n    this.touchCancelHandler = function () {\n      return _this.mouseTouchFinish();\n    };\n\n    this.touchEndClickHandler = function (e) {\n      return _this.mouseTouchClick(e);\n    };\n\n    this.mouseUpHandler = function (e) {\n      return _this.mouseTouchClick(e);\n    };\n\n    this.mouseDownHandler = function () {\n      return _this.mouseDown();\n    };\n\n    this.visibilityChangeHandler = function () {\n      return _this.handleVisibilityChange();\n    };\n\n    this.resizeHandler = function () {\n      return _this.handleWindowResize();\n    };\n  }\n\n  _createClass(EventListeners, [{\n    key: \"addListeners\",\n    value: function addListeners() {\n      this.manageListeners(true);\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      this.manageListeners(false);\n    }\n  }, {\n    key: \"manageListeners\",\n    value: function manageListeners(add) {\n      var _a;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var detectType = options.interactivity.detectsOn;\n      var mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n\n      if (detectType === Enums_1.InteractivityDetect.window) {\n        container.interactivity.element = window;\n        mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n      } else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n        var canvasEl = container.canvas.element;\n        container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n      } else {\n        container.interactivity.element = container.canvas.element;\n      }\n\n      var interactivityEl = container.interactivity.element;\n\n      if (!interactivityEl) {\n        return;\n      }\n\n      var html = interactivityEl;\n\n      if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n\n        if (!options.interactivity.events.onClick.enable) {\n          manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n        } else {\n          manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n          manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n          manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n        }\n\n        manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n      }\n\n      if (container.canvas.element) {\n        container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n      }\n\n      if (options.interactivity.events.resize) {\n        manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n      }\n\n      if (document) {\n        manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n      }\n    }\n  }, {\n    key: \"handleWindowResize\",\n    value: function handleWindowResize() {\n      var _a;\n\n      (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n  }, {\n    key: \"handleVisibilityChange\",\n    value: function handleVisibilityChange() {\n      var container = this.container;\n      var options = container.actualOptions;\n      this.mouseTouchFinish();\n\n      if (!options.pauseOnBlur) {\n        return;\n      }\n\n      if (document === null || document === void 0 ? void 0 : document.hidden) {\n        container.pageHidden = true;\n        container.pause();\n      } else {\n        container.pageHidden = false;\n\n        if (container.getAnimationStatus()) {\n          container.play(true);\n        } else {\n          container.draw();\n        }\n      }\n    }\n  }, {\n    key: \"mouseDown\",\n    value: function mouseDown() {\n      var interactivity = this.container.interactivity;\n\n      if (interactivity) {\n        var mouse = interactivity.mouse;\n        mouse.clicking = true;\n        mouse.downPosition = mouse.position;\n      }\n    }\n  }, {\n    key: \"mouseTouchMove\",\n    value: function mouseTouchMove(e) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      var container = this.container;\n      var options = container.actualOptions;\n\n      if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n        return;\n      }\n\n      container.interactivity.mouse.inside = true;\n      var pos;\n      var canvas = container.canvas.element;\n\n      if (e.type.startsWith(\"mouse\")) {\n        this.canPush = true;\n        var mouseEvent = e;\n\n        if (container.interactivity.element === window) {\n          if (canvas) {\n            var clientRect = canvas.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.clientX - clientRect.left,\n              y: mouseEvent.clientY - clientRect.top\n            };\n          }\n        } else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n          var source = mouseEvent.target;\n          var target = mouseEvent.currentTarget;\n          var canvasEl = container.canvas.element;\n\n          if (source && target && canvasEl) {\n            var sourceRect = source.getBoundingClientRect();\n            var targetRect = target.getBoundingClientRect();\n            var canvasRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n              y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n            };\n          } else {\n            pos = {\n              x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n              y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n            };\n          }\n        } else {\n          if (mouseEvent.target === container.canvas.element) {\n            pos = {\n              x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n              y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n            };\n          }\n        }\n      } else {\n        this.canPush = e.type !== \"touchmove\";\n        var touchEvent = e;\n        var lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n\n        var _canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n\n        pos = {\n          x: lastTouch.clientX - ((_f = _canvasRect === null || _canvasRect === void 0 ? void 0 : _canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n          y: lastTouch.clientY - ((_g = _canvasRect === null || _canvasRect === void 0 ? void 0 : _canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n        };\n      }\n\n      var pxRatio = container.retina.pixelRatio;\n\n      if (pos) {\n        pos.x *= pxRatio;\n        pos.y *= pxRatio;\n      }\n\n      container.interactivity.mouse.position = pos;\n      container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n  }, {\n    key: \"mouseTouchFinish\",\n    value: function mouseTouchFinish() {\n      var interactivity = this.container.interactivity;\n\n      if (interactivity === undefined) {\n        return;\n      }\n\n      var mouse = interactivity.mouse;\n      delete mouse.position;\n      delete mouse.clickPosition;\n      delete mouse.downPosition;\n      interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n      mouse.inside = false;\n      mouse.clicking = false;\n    }\n  }, {\n    key: \"mouseTouchClick\",\n    value: function mouseTouchClick(e) {\n      var container = this.container;\n      var options = container.actualOptions;\n      var mouse = container.interactivity.mouse;\n      mouse.inside = true;\n      var handled = false;\n      var mousePosition = mouse.position;\n\n      if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n        return;\n      }\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.clickPositionValid !== undefined) {\n            handled = plugin.clickPositionValid(mousePosition);\n\n            if (handled) {\n              break;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!handled) {\n        this.doMouseTouchClick(e);\n      }\n\n      mouse.clicking = false;\n    }\n  }, {\n    key: \"doMouseTouchClick\",\n    value: function doMouseTouchClick(e) {\n      var _this2 = this;\n\n      var container = this.container;\n      var options = container.actualOptions;\n\n      if (this.canPush) {\n        var mousePos = container.interactivity.mouse.position;\n\n        if (mousePos) {\n          container.interactivity.mouse.clickPosition = {\n            x: mousePos.x,\n            y: mousePos.y\n          };\n        } else {\n          return;\n        }\n\n        container.interactivity.mouse.clickTime = new Date().getTime();\n        var onClick = options.interactivity.events.onClick;\n\n        if (onClick.mode instanceof Array) {\n          var _iterator2 = _createForOfIteratorHelper(onClick.mode),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var mode = _step2.value;\n              this.handleClickMode(mode);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        } else {\n          this.handleClickMode(onClick.mode);\n        }\n      }\n\n      if (e.type === \"touchend\") {\n        setTimeout(function () {\n          return _this2.mouseTouchFinish();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var options = container.actualOptions;\n      var pushNb = options.interactivity.modes.push.quantity;\n      var removeNb = options.interactivity.modes.remove.quantity;\n\n      switch (mode) {\n        case Enums_1.ClickMode.push:\n          {\n            if (pushNb > 0) {\n              container.particles.push(pushNb, container.interactivity.mouse);\n            }\n\n            break;\n          }\n\n        case Enums_1.ClickMode.remove:\n          container.particles.removeQuantity(removeNb);\n          break;\n\n        case Enums_1.ClickMode.bubble:\n          container.bubble.clicking = true;\n          break;\n\n        case Enums_1.ClickMode.repulse:\n          container.repulse.clicking = true;\n          container.repulse.count = 0;\n\n          var _iterator3 = _createForOfIteratorHelper(container.repulse.particles),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var particle = _step3.value;\n              particle.velocity.setTo(particle.initialVelocity);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          container.repulse.particles = [];\n          container.repulse.finish = false;\n          setTimeout(function () {\n            if (!container.destroyed) {\n              container.repulse.clicking = false;\n            }\n          }, options.interactivity.modes.repulse.duration * 1000);\n          break;\n\n        case Enums_1.ClickMode.attract:\n          container.attract.clicking = true;\n          container.attract.count = 0;\n\n          var _iterator4 = _createForOfIteratorHelper(container.attract.particles),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var _particle = _step4.value;\n\n              _particle.velocity.setTo(_particle.initialVelocity);\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          container.attract.particles = [];\n          container.attract.finish = false;\n          setTimeout(function () {\n            if (!container.destroyed) {\n              container.attract.clicking = false;\n            }\n          }, options.interactivity.modes.attract.duration * 1000);\n          break;\n\n        case Enums_1.ClickMode.pause:\n          if (container.getAnimationStatus()) {\n            container.pause();\n          } else {\n            container.play();\n          }\n\n          break;\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(container.plugins),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              plugin = _step5$value[1];\n\n          if (plugin.handleClickMode) {\n            plugin.handleClickMode(mode);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }]);\n\n  return EventListeners;\n}();\n\nexports.EventListeners = EventListeners;","map":{"version":3,"sources":["/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/tsparticles/dist/Utils/EventListeners.js"],"names":["Object","defineProperty","exports","value","EventListeners","Enums_1","require","Constants_1","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","resizeHandler","handleWindowResize","manageListeners","_a","actualOptions","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","InteractivityDetect","window","mouseOutEvent","parent","canvas","canvasEl","parentElement","parentNode","interactivityEl","html","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseUpEvent","mouseDownEvent","touchCancelEvent","style","pointerEvents","resize","resizeEvent","document","visibilityChangeEvent","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","_d","_e","_f","_g","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","target","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugins","plugin","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","setTimeout","pushNb","modes","push","quantity","removeNb","remove","ClickMode","particles","removeQuantity","bubble","repulse","count","particle","velocity","setTo","initialVelocity","finish","destroyed","duration","attract"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        var _a;\n        (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.actualOptions;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    container.particles.push(pushNb, container.interactivity.mouse);\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.attract:\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n"]},"metadata":{},"sourceType":"script"}