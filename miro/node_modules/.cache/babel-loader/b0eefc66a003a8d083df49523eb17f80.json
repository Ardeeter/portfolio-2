{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  init() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n    this.resize();\n    const options = this.container.actualOptions;\n    const element = this.element;\n\n    if (element) {\n      if (options.fullScreen.enable) {\n        this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n        element.style.position = \"fixed\";\n        element.style.zIndex = options.fullScreen.zIndex.toString(10);\n        element.style.top = \"0\";\n        element.style.left = \"0\";\n        element.style.width = \"100%\";\n        element.style.height = \"100%\";\n      } else {\n        element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n        element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n        element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n        element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n        element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n        element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n      }\n    }\n\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const trail = options.particles.move.trail;\n    const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n    this.coverColor = coverRgb !== undefined ? {\n      r: coverRgb.r,\n      g: coverRgb.g,\n      b: coverRgb.b,\n      a: cover.opacity\n    } : undefined;\n    this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.initBackground();\n    this.paint();\n  }\n\n  loadCanvas(canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  destroy() {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    if (this.context) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n\n    if (!this.context) {\n      return;\n    }\n\n    if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n      this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n    } else {\n      this.paintBase();\n    }\n  }\n\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  }\n\n  windowResize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container;\n    container.canvas.resize();\n    container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n    container.particles.setDensity();\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n\n  resize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n    this.resizeFactor = {\n      width: size.width / oldSize.width,\n      height: size.height / oldSize.height\n    };\n  }\n\n  drawConnectLine(p1, p2) {\n    var _a;\n\n    const ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    const lineStyle = this.lineStyle(p1, p2);\n\n    if (!lineStyle) {\n      return;\n    }\n\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n  }\n\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    var _a;\n\n    const container = this.container;\n    const ctx = container.canvas.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    const beginPos = particle.getPosition();\n    Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n  }\n\n  drawParticleShadow(particle, mousePos) {\n    if (!this.context) {\n      return;\n    }\n\n    Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n  }\n\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link1.destination;\n    const p3 = link2.destination;\n    const triangleOptions = p1.options.links.triangles;\n    const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n    if (opacityTriangle <= 0) {\n      return;\n    }\n\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    const pos3 = p3.getPosition();\n    const ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n      return;\n    }\n\n    let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n\n    if (!colorTriangle) {\n      const linksOptions = p1.options.links;\n      const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n      colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n    }\n\n    if (!colorTriangle) {\n      return;\n    }\n\n    Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n  }\n\n  drawLinkLine(p1, link) {\n    var _a, _b;\n\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link.destination;\n    let opacity = link.opacity;\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    const ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    let colorLine;\n    const twinkle = p1.options.twinkle.lines;\n\n    if (twinkle.enable) {\n      const twinkleFreq = twinkle.frequency;\n      const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n      const twinkling = Math.random() < twinkleFreq;\n\n      if (twinkling && twinkleRgb !== undefined) {\n        colorLine = twinkleRgb;\n        opacity = twinkle.opacity;\n      }\n    }\n\n    if (!colorLine) {\n      const linksOptions = p1.options.links;\n      const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n      colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n    }\n\n    if (!colorLine) {\n      return;\n    }\n\n    const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n    const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n    Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n  }\n\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d;\n\n    if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor();\n    const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n\n    if (!pfColor && !psColor) {\n      return;\n    }\n\n    const options = this.container.actualOptions;\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkleFreq = twinkle.frequency;\n    const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n    const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n    const infectionStage = particle.infecter.infectionStage;\n    const infection = options.infection;\n    const infectionStages = infection.stages;\n    const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n    const fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined;\n    const sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined;\n    const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n\n    if (!this.context || !fillColorValue && !sColor) {\n      return;\n    }\n\n    const strokeColorValue = sColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity) : fillColorValue;\n    this.drawParticleLinks(particle);\n\n    if (radius > 0) {\n      Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n    }\n  }\n\n  drawParticleLinks(particle) {\n    if (!this.context) {\n      return;\n    }\n\n    const container = this.container;\n    const particles = container.particles;\n    const pOptions = particle.options;\n\n    if (particle.links.length > 0) {\n      this.context.save();\n      const p1Links = particle.links.filter(l => {\n        const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n        return linkFreq <= pOptions.links.frequency;\n      });\n\n      for (const link of p1Links) {\n        const p2 = link.destination;\n\n        if (pOptions.links.triangles.enable) {\n          const links = p1Links.map(l => l.destination);\n          const vertices = p2.links.filter(t => {\n            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n            return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n          });\n\n          if (vertices.length) {\n            for (const vertex of vertices) {\n              const p3 = vertex.destination;\n              const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n\n              if (triangleFreq > pOptions.links.triangles.frequency) {\n                continue;\n              }\n\n              this.drawLinkTriangle(particle, link, vertex);\n            }\n          }\n        }\n\n        if (link.opacity > 0 && container.retina.linksWidth > 0) {\n          this.drawLinkLine(particle, link);\n        }\n      }\n\n      this.context.restore();\n    }\n  }\n\n  drawPlugin(plugin, delta) {\n    if (!this.context) {\n      return;\n    }\n\n    Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n  }\n\n  drawLight(mousePos) {\n    if (!this.context) {\n      return;\n    }\n\n    Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n  }\n\n  paintBase(baseColor) {\n    if (!this.context) {\n      return;\n    }\n\n    Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n  }\n\n  lineStyle(p1, p2) {\n    if (!this.context) {\n      return;\n    }\n\n    const options = this.container.actualOptions;\n    const connectOptions = options.interactivity.modes.connect;\n    return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = Utils_1.ColorUtils.colorToRgb(background.color);\n\n      if (color) {\n        elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n}\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/tsparticles/dist/Core/Canvas.js"],"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","constructor","container","size","height","width","context","generatedCanvas","init","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","resize","options","actualOptions","element","fullScreen","enable","originalStyle","Utils","deepExtend","style","position","zIndex","toString","top","left","cover","backgroundMask","color","trail","particles","move","coverRgb","ColorUtils","colorToRgb","coverColor","undefined","r","g","b","a","opacity","trailFillColor","fillColor","initBackground","paint","loadCanvas","canvas","className","Constants","canvasClass","remove","offsetHeight","offsetWidth","getContext","retina","destroy","CanvasUtils","clear","paintBase","getStyleFromRgb","length","windowResize","setResponsive","pixelRatio","setDensity","plugin","plugins","pxRatio","oldSize","resizeFactor","drawConnectLine","p1","p2","ctx","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","mousePos","beginPos","drawParticleShadow","drawLinkTriangle","link1","link2","destination","p3","triangleOptions","links","triangles","opacityTriangle","pos3","NumberUtils","getDistance","linksDistance","colorTriangle","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","composite","drawLinkLine","link","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","warp","shadow","drawParticle","delta","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","pOptions","radius","getRadius","bubble","infectionStage","infecter","infection","infectionStages","stages","infectionColor","infectionRgb","fColor","hslToRgb","sColor","fillColorValue","strokeColorValue","stroke","drawParticleLinks","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","baseColor","connectOptions","interactivity","modes","connect","gradient","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        this.resize();\n        const options = this.container.actualOptions;\n        const element = this.element;\n        if (element) {\n            if (options.fullScreen.enable) {\n                this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n                element.style.position = \"fixed\";\n                element.style.zIndex = options.fullScreen.zIndex.toString(10);\n                element.style.top = \"0\";\n                element.style.left = \"0\";\n                element.style.width = \"100%\";\n                element.style.height = \"100%\";\n            }\n            else {\n                element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n                element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n                element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n                element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n                element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n                element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n            }\n        }\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const trail = options.particles.move.trail;\n        const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n        this.coverColor =\n            coverRgb !== undefined\n                ? {\n                    r: coverRgb.r,\n                    g: coverRgb.g,\n                    b: coverRgb.b,\n                    a: cover.opacity,\n                }\n                : undefined;\n        this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        if (!this.context) {\n            return;\n        }\n        if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n        }\n        else {\n            this.paintBase();\n        }\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        container.canvas.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        this.resizeFactor = {\n            width: size.width / oldSize.width,\n            height: size.height / oldSize.height,\n        };\n    }\n    drawConnectLine(p1, p2) {\n        var _a;\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        const lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        var _a;\n        const container = this.container;\n        const ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        const beginPos = particle.getPosition();\n        Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n    drawParticleShadow(particle, mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n            return;\n        }\n        let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n    drawLinkLine(p1, link) {\n        var _a, _b;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        let colorLine;\n        const twinkle = p1.options.twinkle.lines;\n        if (twinkle.enable) {\n            const twinkleFreq = twinkle.frequency;\n            const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            const twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n            return;\n        }\n        const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const infectionStage = particle.infecter.infectionStage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n        const fColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined);\n        const sColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined);\n        const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n        if (!this.context || (!fillColorValue && !sColor)) {\n            return;\n        }\n        const strokeColorValue = sColor !== undefined\n            ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity)\n            : fillColorValue;\n        this.drawParticleLinks(particle);\n        if (radius > 0) {\n            Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n        }\n    }\n    drawParticleLinks(particle) {\n        if (!this.context) {\n            return;\n        }\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (particle.links.length > 0) {\n            this.context.save();\n            const p1Links = particle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(particle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(particle, link);\n                }\n            }\n            this.context.restore();\n        }\n    }\n    drawPlugin(plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n    drawLight(mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n    paintBase(baseColor) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n    lineStyle(p1, p2) {\n        if (!this.context) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const connectOptions = options.interactivity.modes.connect;\n        return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n            }\n            else {\n                elementStyle.backgroundColor = \"\";\n            }\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n}\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}