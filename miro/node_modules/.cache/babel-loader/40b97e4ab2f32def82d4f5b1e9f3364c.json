{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vector = void 0;\n\nvar Vector = /*#__PURE__*/function () {\n  function Vector(x, y) {\n    _classCallCheck(this, Vector);\n\n    var defX, defY;\n\n    if (y === undefined) {\n      if (typeof x === \"number\") {\n        throw new Error(\"tsParticles - Vector not initialized correctly\");\n      }\n\n      var coords = x;\n      var _ref = [coords.x, coords.y];\n      defX = _ref[0];\n      defY = _ref[1];\n    } else {\n      defX = x;\n      defY = y;\n    }\n\n    this.x = defX;\n    this.y = defY;\n  }\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(velocity) {\n      this.x = velocity.x;\n      this.y = velocity.y;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }, {\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }]);\n\n  return Vector;\n}();\n\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);","map":{"version":3,"sources":["/Users/ardeeter/miroPortfolio/themeforest-CwQrfjdB-reactjs-creative-personal-portfolio-template-miro/miro/node_modules/tsparticles/dist/Core/Particle/Vector.js"],"names":["Object","defineProperty","exports","value","Vector","x","y","defX","defY","undefined","Error","coords","v","create","n","sub","length","Math","pow","getLengthSq","abs","clone","velocity","angle","cos","sin","atan2","updateFromAngle","sqrt","source","origin"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector = void 0;\nclass Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);\n"]},"metadata":{},"sourceType":"script"}